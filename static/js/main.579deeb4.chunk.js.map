{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["coefficients","basic","value","name","more39","more49","more59","more69","baseCirclePrices","label","baseSquarePrices","App","React","useState","coef","setCoef","diametr","setDiametr","circleCoast","setCircleCoast","width","setWidth","height","setHeight","squareCoast","setSquareCoast","calculateCirclePrice","needSet","plosad","Math","floor","coast","calculateSquarePrice","base","useEffect","className","onChange","e","Number","target","type","placeholder","id","Object","keys","map","item","key","defaultValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6PAGMA,G,MAAe,CACnBC,MAAO,CACLC,MAAO,EACPC,KAAM,2LAERC,OAAQ,CACNF,MAAO,EACPC,KAAM,mLAERE,OAAQ,CACNH,MAAO,IACPC,KAAM,mLAERG,OAAQ,CACNJ,MAAO,IACPC,KAAM,mLAERI,OAAQ,CACNL,MAAO,IACPC,KAAM,qLAIJK,EAAmB,CACvB,CAAEC,MAAO,iBAAQP,MAAO,IACxB,CAAEO,MAAO,iBAAQP,MAAO,IACxB,CAAEO,MAAO,iBAAQP,MAAO,IACxB,CAAEO,MAAO,iBAAQP,MAAO,IACxB,CAAEO,MAAO,iBAAQP,MAAO,IACxB,CAAEO,MAAO,iBAAQP,MAAO,KAGpBQ,EAAmB,CACvB,CAAED,MAAO,kCAAeP,MAAO,CAAC,GAAI,KACpC,CAAEO,MAAO,kCAAeP,MAAO,CAAC,GAAI,KACpC,CAAEO,MAAO,kCAAeP,MAAO,CAAC,GAAI,KACpC,CAAEO,MAAO,kCAAeP,MAAO,CAAC,GAAI,KACpC,CAAEO,MAAO,kCAAeP,MAAO,CAAC,GAAI,KACpC,CAAEO,MAAO,kCAAeP,MAAO,CAAC,GAAI,MAmJvBS,MAhJf,WAAgB,IAAD,EACWC,IAAMC,SAASb,GAD1B,mBACNc,EADM,KACAC,EADA,OAEiBH,IAAMC,WAFvB,mBAENG,EAFM,KAEGC,EAFH,OAGyBL,IAAMC,WAH/B,mBAGNK,EAHM,KAGOC,EAHP,OAKaP,IAAMC,WALnB,mBAKNO,EALM,KAKCC,EALD,OAMeT,IAAMC,WANrB,mBAMNS,EANM,KAMEC,EANF,OAOyBX,IAAMC,WAP/B,mBAONW,EAPM,KAOOC,EAPP,KAaPC,EAAuB,SAACV,GAA6B,IAApBW,IAAmB,yDAClDC,EAASC,KAAKC,MAAqBd,EAAUA,EAAzB,MACtBe,EAAQH,EAASd,EAAKb,MAAMC,MAchC,OAZIc,GAAW,GACbe,GAAgBjB,EAAKP,OAAOL,MACnBc,GAAW,GACpBe,GAAgBjB,EAAKR,OAAOJ,MACnBc,GAAW,GACpBe,GAAgBjB,EAAKT,OAAOH,MACnBc,GAAW,KACpBe,GAAgBjB,EAAKV,OAAOF,OAG9B6B,EAAQA,EAASA,EAAQ,IAAO,IAC5BJ,GAASR,EAAeY,GACrBA,GAGHC,EAAuB,SAACC,GAC5B,IAAML,EAASK,EAAOJ,KAAKC,MAAMG,EAAK,GAAKA,EAAK,IAAMJ,KAAKC,MAAMV,EAAQE,GACrES,EAAQH,EAASd,EAAKb,MAAMC,MAchC,OAbI0B,GAAU,KACZG,GAAgBjB,EAAKP,OAAOL,MACnB0B,GAAU,KACnBG,GAAgBjB,EAAKR,OAAOJ,MACnB0B,GAAU,KACnBG,GAAgBjB,EAAKT,OAAOH,MACnB0B,GAAU,OACnBG,GAAgBjB,EAAKV,OAAOF,OAG9B6B,EAAQA,EAASA,EAAQ,IAAO,IAE3BE,GAAMR,EAAeM,GACnBA,GAWT,OARAnB,IAAMsB,WAAU,WACVlB,EAAU,GAAGU,EAAqBV,KACrC,CAACA,EAASU,IAEbd,IAAMsB,WAAU,WACVZ,EAAS,GAAKF,EAAQ,GAAIY,MAC7B,CAACV,EAAQF,EAAOY,IAGf,yBAAKG,UAAU,WACb,yBAAKA,UAAU,YACb,uBAAGA,UAAU,MAAb,2LACA,kXACA,2BAAOjC,MAAOc,EAASoB,SAAU,SAACC,GAAD,OAAOpB,EAAWqB,OAAOD,EAAEE,OAAOrC,SAASsC,KAAK,SAASC,YAAY,4FAElGzB,GAAWA,GAAW,IACpB,uBAAGmB,UAAU,iBAAb,2JAAyD,IACvD,uBAAGA,UAAU,WAAWnB,EAAxB,gBACA,6BACA,uBAAGmB,UAAU,eAAejB,EAA5B,4CAKJF,GAAWA,EAAU,IACrB,uBAAGmB,UAAU,iBAAb,2JAAyD,IAAzD,8OAC+C,uBAAGA,UAAU,eAAb,qBAMrD,yBAAKA,UAAU,YACb,uBAAGA,UAAU,MAAb,sOACA,sWACA,2BAAOO,GAAG,WAAWxC,MAAOkB,EAAOgB,SAAU,SAACC,GAAD,OAAOhB,EAASiB,OAAOD,EAAEE,OAAOrC,SAASsC,KAAK,SAASC,YAAY,8EAChH,2BAAOC,GAAG,YAAYxC,MAAOoB,EAAQc,SAAU,SAACC,GAAD,OAAOd,EAAUe,OAAOD,EAAEE,OAAOrC,SAASsC,KAAK,SAASC,YAAY,oFAEjHnB,GAAU,IAAMF,GAAS,IACrB,uBAAGe,UAAU,YAAb,oGAA0C,IACxC,uBAAGA,UAAU,SAASf,EAAtB,gBADF,MACuC,uBAAGe,UAAU,UAAUb,EAAvB,gBACrC,6BACA,uBAAGa,UAAU,eAAeX,EAA5B,2CAKJF,GAAUA,EAAS,IAAQF,GAASA,EAAQ,KAC1C,uBAAGe,UAAU,YAAb,8QACsD,uBAAGA,UAAU,eAAb,qBAM9D,yBAAKA,UAAU,SACb,uBAAGA,UAAU,MAAb,gEAEEQ,OAAOC,KAAK9B,GAAM+B,KAAI,SAAAC,GAAI,OACtB,yBAAKC,IAAKD,GACR,2BAAIhC,EAAKgC,GAAM3C,MACf,2BAAOiC,UAvGHjC,EAuGwB2C,EAvGf,SAACT,GAC5BtB,EAAQ,eAAID,EAAL,eAAYX,EAAZ,eAAwBW,EAAKX,GAA7B,CAAoCD,MAAOmC,EAAEE,OAAOrC,aAsGVsC,KAAK,SAASQ,aAAclC,EAAKgC,GAAM5C,MAAOuC,YAAY,gDAvG1F,IAACtC,MA6Gd,yBAAKgC,UAAU,aACb,yBAAKA,UAAU,eACb,uBAAGA,UAAU,MAAb,+HAEE3B,EAAiBqC,KAAI,SAAAC,GAAI,OACvB,yBAAKC,IAAKD,EAAKrC,OAAf,4BACQqC,EAAKrC,MADb,MACuBiB,EAAqBoB,EAAK5C,OAAO,GADxD,6CAMN,yBAAKiC,UAAU,eACb,uBAAGA,UAAU,MAAb,iJAEEzB,EAAiBmC,KAAI,SAAAC,GAAI,OACvB,yBAAKC,IAAKD,EAAKrC,OAAf,4BACQqC,EAAKrC,MADb,MACuBuB,EAAqBc,EAAK5C,OADjD,gDCrKI+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.579deeb4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst coefficients = {\n  basic: {\n    value: 4,\n    name: 'Базовая цена - Цена за 1 квадратный см'\n  },\n  more39: {\n    value: 1,\n    name: 'Коэффициент для картин больше 39 см'\n  },\n  more49: {\n    value: 1.1,\n    name: 'Коэффициент для картин больше 49 см'\n  },\n  more59: {\n    value: 1.2,\n    name: 'Коэффициент для картин больше 59 см'\n  },\n  more69: {\n    value: 1.2,\n    name: 'Коэффициент для картин больше 69 см'\n  },\n}\n\nconst baseCirclePrices = [\n  { label: '22см', value: 22},\n  { label: '30см', value: 30},\n  { label: '40см', value: 40},\n  { label: '50см', value: 50},\n  { label: '60см', value: 60},\n  { label: '70см', value: 70}\n]\n\nconst baseSquarePrices = [\n  { label: '22см X 22см', value: [22, 22]},\n  { label: '30см X 30см', value: [30, 30]},\n  { label: '40см X 40см', value: [40, 40]},\n  { label: '50см X 50см', value: [50, 50]},\n  { label: '60см X 60см', value: [60, 60]},\n  { label: '70см X 70см', value: [70, 70]}\n]\n\nfunction App() {\n  const [coef, setCoef] = React.useState(coefficients);\n  const [diametr, setDiametr] = React.useState();\n  const [circleCoast, setCircleCoast] = React.useState();\n\n  const [width, setWidth] = React.useState();\n  const [height, setHeight] = React.useState();\n  const [squareCoast, setSquareCoast] = React.useState();\n\n  const changeCoef = (name) => (e) => {\n    setCoef({...coef, [name]: { ...coef[name], value: e.target.value} })\n  }\n\n  const calculateCirclePrice = (diametr, needSet = true) => {\n    const plosad = Math.floor(0.25 * 3.14 * (diametr * diametr));\n    let coast = plosad * coef.basic.value;\n\n    if (diametr >= 70) {\n      coast = coast * coef.more69.value\n    } else if (diametr >= 60) {\n      coast = coast * coef.more59.value\n    } else if (diametr >= 50 ) {\n      coast = coast * coef.more49.value\n    } else if (diametr >= 40) {\n      coast = coast * coef.more39.value\n    }\n\n    coast = coast - (coast % 100) + 100;\n    if (needSet) setCircleCoast(coast)\n    return coast\n  }\n\n  const calculateSquarePrice = (base) => {\n    const plosad = base ? Math.floor(base[0] * base[1]) : Math.floor(width * height);\n    let coast = plosad * coef.basic.value;\n    if (plosad >= 3848) {\n      coast = coast * coef.more69.value\n    } else if (plosad >= 2827) {\n      coast = coast * coef.more59.value\n    } else if (plosad >= 1963 ) {\n      coast = coast * coef.more49.value\n    } else if (plosad >= 1256) {\n      coast = coast * coef.more39.value\n    }\n\n    coast = coast - (coast % 100) + 100;\n\n    if (!base) setSquareCoast(coast)\n    return coast\n  }\n\n  React.useEffect(() => {\n    if (diametr > 0) calculateCirclePrice(diametr)\n  }, [diametr, calculateCirclePrice])\n\n  React.useEffect(() => {\n    if (height > 0 && width > 0 ) calculateSquarePrice()\n  }, [height, width, calculateSquarePrice])\n\n  return (\n      <div className=\"wrapper\">\n        <div className=\"calcItem\">\n          <p className=\"h1\">Рассчёт стоимости круглой картины</p>\n          <p>Диаметр круглой картины должен быть кратен 10см и быть не меньше 30см</p>\n          <input value={diametr} onChange={(e) => setDiametr(Number(e.target.value))} type=\"number\" placeholder=\"Введите диаметр\" />\n          {\n            !!diametr && diametr >= 30 && (\n                <p className=\"wrapperCircle\">Стоимость картины диаметром{' '}\n                  <b className=\"diametr\">{diametr}см</b>\n                  <br/>\n                  <b className=\"circleCoast\">{circleCoast} рублей</b>\n                </p>\n            )\n          }\n          {\n            !!diametr && diametr < 30 && (\n              <p className=\"wrapperCircle\">Стоимость картины диаметром{' '}\n                Диаметр картины должен быть больше или равен <b className=\"circleCoast\">30 см</b>\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"calcItem\">\n          <p className=\"h1\">Рассчёт квадратной(прямоугольный) картины</p>\n          <p>Ширина и длина картины должны быть кратны 5см и быть не меньше 30см</p>\n          <input id=\"widthPic\" value={width} onChange={(e) => setWidth(Number(e.target.value))} type=\"number\" placeholder=\"Введите длину\" />\n          <input id=\"heightPic\" value={height} onChange={(e) => setHeight(Number(e.target.value))} type=\"number\" placeholder=\"Введите ширину\" />\n          {\n            height >= 30 && width >= 30 && (\n                <p className=\"sqCircle\">Стоимость картины{' '}\n                  <b className=\"width\">{width}см</b> x <b className=\"height\">{height}см</b>\n                  <br/>\n                  <b className=\"squareCoast\">{squareCoast} рублей</b>\n                </p>\n            )\n          }\n          {\n            ((height && height < 30) || (width && width < 30)) && (\n                <p className=\"sqCircle\">\n                  Ширина и длина картины должны быть больше или равны <b className=\"squareCoast\">30 см</b>\n                </p>\n            )\n          }\n        </div>\n\n        <div className=\"modal\">\n          <p className=\"h1\">Коэфиценты</p>\n          {\n            Object.keys(coef).map(item => (\n                <div key={item}>\n                  <p>{coef[item].name}</p>\n                  <input onChange={changeCoef(item)} type=\"number\" defaultValue={coef[item].value} placeholder=\"Базовый\" />\n                </div>\n            ))\n          }\n        </div>\n\n        <div className=\"modalLeft\">\n          <div className='flex-center'>\n            <p className=\"h1\">Цены для круглых картин</p>\n            {\n              baseCirclePrices.map(item => (\n                <div key={item.label}>\n                  Цена {item.label} - {calculateCirclePrice(item.value, false)} рублей\n                </div>\n              ))\n            }\n          </div>\n          <div className='flex-center'>\n            <p className=\"h1\">Цены для квадратных картин</p>\n            {\n              baseSquarePrices.map(item => (\n                <div key={item.label}>\n                  Цена {item.label} - {calculateSquarePrice(item.value)} рублей\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}